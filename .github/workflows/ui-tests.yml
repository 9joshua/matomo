name: UI Tests

on:
  pull_request:

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  issues: read
  packages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none
concurrency:
  group: ui-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  UI:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: matomo_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        tests: [ 'UI' ]
        php: [ '7.2' ]
        parts: [ 0,1,2 ]
        adapter: [ 'PDO_MYSQL' ]
        node: [ '16' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: running tests
        uses: matomo-org/github-action-tests@v1
        with:
          test-type: ${{ matrix.tests }}
          mysql-driver: ${{ matrix.adapter }}
          php-version: ${{ matrix.php }}
          test-command: ${{ matrix.parts }}
          run_number: ${{ github.run_number }}
          node_version: ${{ matrix.node }}
          repository: ${{ github.repository }}
          artifect_pass: ${{ secrets.ARTIFACTS_PASS }}
          ref: ${{ github.event.pull_request.base.ref }}
          run_id: ${{ github.run_id }}
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: ${{ matrix.php }}
#          extensions: bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis, opcache
#          ini-values: |
#            post_max_size=256M
#            max_execution_time=10000
#            memory_limit=-1
#            always_populate_raw_post_data=-1
#            zend.exception_ignore_args = Off
#            opcache.enable = 1
#            opcache.enable_cli=1
#          tools: composer:v2
#          coverage: none
#
#      - name: Setup Node
#        uses: actions/setup-node@v2
#        with:
#          node-version: '16'
#
#      - name: prepare setup
#        shell: bash
#        run: ./.github/scripts/bash/prepare.sh
#        env:
#          PHP_VERSION: ${{ matrix.php }}
#          MATOMO_TEST_TARGET: 'UI'
#          MYSQL_ADAPTER: 'PDO_MYSQL'
#
#      - name: UI tests Group ${{ matrix.parts }}
#        env:
#          GITHUB: true
#        run: |
#          ./console tests:run-ui --store-in-ui-tests-repo --persist-fixture-data --assume-artifacts --core --extra-options="--num-test-groups=8 --test-group=${{ matrix.parts }}"
#
#      - name: upload processed screenshots
#        if: failure()
#        shell: bash
#        run: ./.github/scripts/bash/upload_artifacts.sh
#        env:
#          ARTIFACTS_PASS: ${{ secrets.ARTIFACTS_PASS }}
#          GITHUB_REPO: ${{ github.repository }}
#          GITHUB_BRANCH: ${{ github.event.pull_request.base.ref }}
#          GITHUB_RUN_ID: ${{ github.run_id }}
#          GITHUB_RUN_NUMBER: ${{ github.run_number }}
#
#      - name: View UI failures
#        if: failure()
#        shell: bash
#        run: ./.github/scripts/bash/view_ui_failed.sh
#        env:
#          GITHUB_REPO: ${{ github.repository }}
#          GITHUB_BRANCH: ${{ github.event.pull_request.base.ref }}
#          GITHUB_RUN_ID: ${{ github.run_id }}