name: UI Tests

on:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux_tests:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        
    strategy:
      fail-fast: false
      matrix:
        tests: ['UITests' ]
        parts: [ 0,1,2 ]

    steps:
#      - name: Setup Mysql
#        run: |
#          docker run --name mariadb -p 3306:3306 --tmpfs /var/lib/mysql:rw -e MYSQL_DATABASE=piwik_tests -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mariadb
#          docker ps -a

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          lfs: true
          submodules: recursive


      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_sqlite, gd, redis
          ini-values: post_max_size=256M, max_execution_time=10000, memory_limit=4024M
          tools: composer:v2
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: installing node/puppeteer
        working-directory: ./tests/lib/screenshot-testing
        run: npm install

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          cp .github/scripts/config.ini.github.php  config/config.ini.php
          cp ./tests/PHPUnit/phpunit.xml.dist ./tests/PHPUnit/phpunit.xml
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          chmod a+rw ./plugins/*/tests/Integration/processed || true
      #
      #      - name: Setup Nginx
      #        run: |
      #          docker run --name nginxapp -v /home/runner/work/matomo/matomo:/var/www/ -v /home/runner/work/matomo/matomo/.github/scripts/piwiki_nginx.config:/etc/nginx/conf -p 80:80 -d nginx
      #          docker ps

      - name: Install dependencies
        run: |
          composer install --ignore-platform-reqs

      - name: Run PHP on 3000
        run: |
          tmux new-session -d -s "php" php -S localhost:3000

      - name: Javascript tests Build
        run: |
          git clone --recursive https://github.com/google/woff2.git ../travis_woff2
          cd ../travis_woff2
          make clean all
          mkdir $HOME/.fonts
          cp /home/runner/work/matomo/matomo/tests/travis/fonts/* $HOME/.fonts
          fc-cache -f -v
          echo "fonts:"
          ls $HOME/.fonts
          sudo apt-get install ttf-mscorefonts-installer imagemagick imagemagick-doc
          sudo apt-get remove ttf-bitstream-vera
          sudo sed -i -E 's/name="memory" value="[^"]+"/name="memory" value="2GiB"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="width" value="[^"]+"/name="width" value="64KP"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="height" value="[^"]+"/name="height" value="64KP"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="area" value="[^"]+"/name="area" value="1GiB"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="disk" value="[^"]+"/name="area" value="4GiB"/g' /etc/ImageMagick-6/policy.xml


      - name: UI tests Group ${{ matrix.parts }}
        run: |
          ./console tests:run-ui --store-in-ui-tests-repo --persist-fixture-data --assume-artifacts --core --extra-options="--num-test-groups=3 --test-group=${{ matrix.parts }}"



