name: Matomo Tests

on:
  pull_request:
  #    branches:
  #      - main
  schedule:
    - cron: '0 0 * * *'

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  issues: write
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: none


jobs:
  php:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.head_ref }}
      cancel-in-progress: true
    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw
    strategy:
      fail-fast: false
      matrix:
        tests: [ 'UnitTests', 'SystemTestsPlugins' ,'SystemTestsCore' , 'IntegrationTestsCore','IntegrationTestsPlugins' ]

    steps:

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          lfs: false
          submodules: recursive

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis
          ini-values: post_max_size=256M, max_execution_time=10000, memory_limit=-1, always_populate_raw_post_data=-1, error_reporting=E_ALL, log_errors=on, display_errors=on, zend.exception_ignore_args = Off
          tools: composer:v2
          coverage: none

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          php -i
          cp .github/scripts/config.ini.github.php  config/config.ini.php
          cp ./tests/PHPUnit/phpunit.xml.dist ./tests/PHPUnit/phpunit.xml
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/cache/tracker
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/templates_c/d2
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          mkdir -p /tmp
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          chmod a+rw ./plugins/*/tests/Integration/processed || true

      - name: Install dependencies
        run: |
          composer install --ignore-platform-reqs

      - name: Run PHP on 80
        run: |
          sudo setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f $(which php))
          tmux new-session -d -s "php-80" php -S localhost:80
          tmux ls

      - name: set tmp and screenshot folder permission
        run: |
          sudo gpasswd -a "$USER" www-data
          sudo chown -R "$USER":www-data /home/runner/work/matomo/matomo/
          sudo chmod o+w /home/runner/work/matomo/matomo/
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp
          sudo chmod -R 777 /tmp
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp/templates_c
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tests/UI

      - name: Test runing
        if: matrix.tests == 'UnitTests'
        run: |
          ./vendor/phpunit/phpunit/phpunit --configuration ./tests/PHPUnit/phpunit.xml --testsuite UnitTests

      - name: Test runing
        if: startsWith(matrix.tests,'SystemTests') || startsWith(matrix.tests,'IntegrationTests')
        run: |
          ./vendor/phpunit/phpunit/phpunit --configuration ./tests/PHPUnit/phpunit.xml --testsuite ${{ matrix.tests }}
        env:
          MYSQL_ADAPTER: PDO_MYSQL

  Javascript:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.head_ref }}
      cancel-in-progress: true
    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        tests: [ 'JavascriptTests-js', 'AngularJSTests-js' ]

    steps:
      #      - name: Setup Mysql
      #        run: |
      #          docker run --name mariadb -p 3306:3306 --tmpfs /var/lib/mysql:rw -e MYSQL_DATABASE=piwik_tests -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mariadb
      #          docker ps -a

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          lfs: false
          submodules: recursive


      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_sqlite, gd, redis
          ini-values: post_max_size=256M, max_execution_time=10000, memory_limit=4024M
          tools: composer:v2
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: installing node/puppeteer
        working-directory: ./tests/lib/screenshot-testing
        run: npm install

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          cp .github/scripts/config.ini.github.php  config/config.ini.php
          cp ./tests/PHPUnit/phpunit.xml.dist ./tests/PHPUnit/phpunit.xml
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          chmod a+rw ./plugins/*/tests/Integration/processed || true
          sudo chmod -R 755 ./tmp

      #
      #      - name: Setup Nginx
      #        run: |
      #          docker run --name nginxapp -v /home/runner/work/matomo/matomo:/var/www/ -v /home/runner/work/matomo/matomo/.github/scripts/piwiki_nginx.config:/etc/nginx/conf -p 80:80 -d nginx
      #          docker ps

      - name: Install dependencies
        run: |
          composer install --ignore-platform-reqs

      - name: Run PHP on 80
        run: |
          sudo setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f $(which php))
          tmux new-session -d -s "php-cgi" sudo php -S 127.0.0.1:80
          tmux ls

      - name: Javascript Tests
        if: matrix.tests == 'JavascriptTests-js'
        run: |
          ./console tests:run-js --matomo-url='http://localhost'

      - name: Running angularjs && vue tests
        if: matrix.tests == 'AngularJSTests-js'
        working-directory: ./tests/angularjs
        run: |
          npm install
          ./node_modules/karma/bin/karma start karma.conf.js --browsers ChromeHeadless --single-run





