name: Matomo Tests

on:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  issues: write
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: none
  statuses: none
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:

  PHP:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw
    strategy:
      fail-fast: false
      matrix:
        tests: [ 'UnitTests', 'SystemTestsPlugins' ,'SystemTestsCore' , 'IntegrationTestsCore','IntegrationTestsPlugins0','IntegrationTestsPlugins1','IntegrationTestsPlugins2','IntegrationTestsPlugins3' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: false
          submodules: recursive

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis
          ini-values: |
            memory_limit = 256M,
            max_execution_time=10000,
            always_populate_raw_post_data=-1,
            error_reporting=E_ALL,
            log_errors=on, display_errors=on,
            allow_url_fopen = on,
            zend.exception_ignore_args = Off
          tools: composer:v2
          coverage: none

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/cache/tracker
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/templates_c/d2
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          mkdir -p /tmp
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          cp .github/scripts/config.ini.github.php  config/config.ini.php
          php ./tests/PHPUnit/formatXML.php
          ls ./tests/PHPUnit/


      - name: Install dependencies
        run: |
          composer install --ignore-platform-reqs

      - name: Run PHP on 80 and 3000
        run: |
          sudo setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f $(which php))
          tmux new-session -d -s "php-80" php -S localhost:80
          tmux new-session -d -s "php-3000" php -S localhost:3000
          tmux ls

      - name: set tmp and screenshot folder permission
        run: |
          sudo gpasswd -a "$USER" www-data
          sudo chown -R "$USER":www-data /home/runner/work/matomo/matomo/
          sudo chmod o+w /home/runner/work/matomo/matomo/
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp
          sudo chmod -R 777 /tmp
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp/templates_c
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tests/UI

      - name: Test runing
        if: matrix.tests == 'UnitTests'
        run: |
          ./vendor/phpunit/phpunit/phpunit --configuration ./tests/PHPUnit/phpunit.xml --testsuite UnitTests

      - name: Test runing
        if: startsWith(matrix.tests,'SystemTests') || startsWith(matrix.tests,'IntegrationTests')
        run: |
          ./vendor/phpunit/phpunit/phpunit --configuration ./tests/PHPUnit/phpunit.xml --testsuite ${{ matrix.tests }}
        env:
          TRAVIS: true
          GITHUB: true


  Javascript:
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        tests: [ 'JavascriptTests-js', 'AngularJSTests-js' ]

    steps:
      #      - name: Setup Mysql
      #        run: |
      #          docker run --name mariadb -p 3306:3306 --tmpfs /var/lib/mysql:rw -e MYSQL_DATABASE=piwik_tests -e MYSQL_ALLOW_EMPTY_PASSWORD=yes -d mariadb
      #          docker ps -a

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: false
          submodules: recursive


      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_sqlite, gd, redis
          ini-values: post_max_size=256M, max_execution_time=10000, memory_limit=4024M
          tools: composer:v2
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: installing node/puppeteer
        working-directory: ./tests/lib/screenshot-testing
        run: npm install

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          cp .github/scripts/config.ini.github.php  config/config.ini.php
          sed -i 's/3000/\//g' ./config/config.ini.php
          cp ./tests/PHPUnit/phpunit.xml.dist ./tests/PHPUnit/phpunit.xml
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/templates_c/d2
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          chmod a+rw ./plugins/*/tests/Integration/processed || true
          sudo chmod -R 755 ./tmp

      #
      #      - name: Setup Nginx
      #        run: |
      #          docker run --name nginxapp -v /home/runner/work/matomo/matomo:/var/www/ -v /home/runner/work/matomo/matomo/.github/scripts/piwiki_nginx.config:/etc/nginx/conf -p 80:80 -d nginx
      #          docker ps

      - name: Install dependencies
        run: |
          composer clear-cache
          composer install --ignore-platform-reqs

      - name: Run PHP on 80
        run: |
          sudo setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f $(which php))
          tmux new-session -d -s "php-cgi" sudo php -S 127.0.0.1:80
          tmux ls

      - name: Javascript Tests
        if: matrix.tests == 'JavascriptTests-js'
        run: |
          ./console tests:run-js --matomo-url='http://localhost'

      - name: Running angularjs && vue tests
        if: matrix.tests == 'AngularJSTests-js'
        working-directory: ./tests/angularjs
        run: |
          npm install
          ./node_modules/karma/bin/karma start karma.conf.js --browsers ChromeHeadless --single-run

  UI:
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: piwik_tests
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --tmpfs /var/lib/mysql:rw --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        tests: [ 'UITests' ]
        parts: [ 0,1,2,3,4,5,6,7 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: recursive
      #
      - name: Install dependencies
        run: |
          composer clear-cache
          composer install --ignore-platform-reqs

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis
          ini-values: post_max_size=256M, max_execution_time=10000, memory_limit=-1, always_populate_raw_post_data=-1,zend.exception_ignore_args = Off
          tools: composer:v2
          coverage: none


      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: installing config.ini.php && Adjusting phpunit.xml && tmp/ sub-directories
        run: |
          cp .github/scripts/config.ini.github.ui.php config/config.ini.php
          cp .github/scripts/config.dist.js ./tests/UI/config.js
          cp ./tests/PHPUnit/phpunit.xml.dist ./tests/PHPUnit/phpunit.xml
          mkdir -p ./tmp/assets
          mkdir -p ./tmp/cache
          mkdir -p ./tmp/cache/tracker
          mkdir -p ./tmp/latest
          mkdir -p ./tmp/logs
          mkdir -p ./tmp/sessions
          mkdir -p ./tmp/templates_c
          mkdir -p ./tmp/templates_c/d2
          mkdir -p ./tmp/templates_c/2f
          mkdir -p ./tmp/nonexistant
          mkdir -p ./tmp/tcpdf
          mkdir -p ./tmp/climulti
          mkdir -p /tmp
          mkdir -p ./tests/UI/processed-ui-screenshots
          cp ./plugins/Morpheus/images/logo.svg ./tmp/
          chmod a+rw ./tests/lib/geoip-files || true
          chmod a+rw ./plugins/*/tests/System/processed || true
          chmod a+rw ./plugins/*/tests/Integration/processed || true
          sed -i -E 's/logoSVG/"\/tmp\/logo.svg"/g' plugins/CoreHome/templates/_logo.twig

      - name: Run PHP on 80
        run: |
          sudo systemctl enable php8.0-fpm.service
          sudo systemctl start php8.0-fpm.service
          sudo systemctl status php8.0-fpm.service
          sudo systemctl enable nginx
          sudo systemctl start nginx
          sudo cp ./.github/scripts/ui_nginx.conf /etc/nginx/conf.d/
          sudo unlink /etc/nginx/sites-enabled/default
          sudo nginx -t
          sudo systemctl reload nginx
          ps aux|grep nginx|grep -v grep
#          sudo setcap CAP_NET_BIND_SERVICE=+eip $(readlink -f $(which php))
#          tmux new-session -d -s "php-80" php -S localhost:80
#          tmux new-session -d -s "php-3000" php -S localhost:3000
#          tmux ls
      #
      #
      - name: Javascript tests Build
        run: |
          git clone --recursive https://github.com/google/woff2.git ../travis_woff2
          cd ../travis_woff2
          make clean all
          mkdir $HOME/.fonts
          cp /home/runner/work/matomo/matomo/.github/scripts/fonts/* $HOME/.fonts
          fc-cache -f -v
          echo "fonts:"
          ls $HOME/.fonts
          sudo sed -i -E 's/name="memory" value="[^"]+"/name="memory" value="2GiB"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="width" value="[^"]+"/name="width" value="64KP"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="height" value="[^"]+"/name="height" value="64KP"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="area" value="[^"]+"/name="area" value="1GiB"/g' /etc/ImageMagick-6/policy.xml
          sudo sed -i -E 's/name="disk" value="[^"]+"/name="area" value="4GiB"/g' /etc/ImageMagick-6/policy.xml

      - name: installing node/puppeteer
        working-directory: ./tests/lib/screenshot-testing
        run: |
          git lfs pull --exclude=
          npm install
          node --version

      - name: set tmp and screenshot folder permission
        run: |
          sudo chmod o+w /home/runner/work/matomo/matomo/
          sudo chown -R www-data /home/runner/work/matomo/matomo/
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tests/UI/processed-ui-screenshots
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp/assets
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp/templates_c
          sudo chmod -R 777 /home/runner/work/matomo/matomo/tmp/templates_c/2f
          ls -l /home/runner/work/matomo/matomo/
          sudo adduser runner www-data
          sudo grep ^www-data /etc/group

      - name: UI tests Group ${{ matrix.parts }}
        env:
          GITHUB: true
        run: |
          sudo -u www-data ./console tests:run-ui --store-in-ui-tests-repo --persist-fixture-data --assume-artifacts --core --extra-options="--num-test-groups=8 --test-group=${{ matrix.parts }}"

      - name: failed UI details
        if: failure()
        shell: bash
        run: |
          ls -l /home/runner/work/matomo/matomo/tmp/templates_c
          echo ""
          echo "View UI failures here:"
          echo ""
          echo "::warning:: https://builds-artifacts.matomo.org/${{ github.repository }}/${{ github.event.pull_request.base.ref }}/${{ github.run_id }}/"
          echo ""
          echo "If the new screenshots are valid, then you can copy them over to the right directory with the command:"
          echo ""
          echo "::warning:: ./console tests:sync-ui-screenshots ${{ github.job }}"
          echo ""
      - name: upload processed screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.run_id }}
          path: |
            /home/runner/work/matomo/matomo/tests/UI/screenshot-diffs
            /home/runner/work/matomo/matomo/tests/UI/processed-ui-screenshots
            /home/runner/work/matomo/matomo/tests/UI/expected-screenshots


      - name: Download processed screenshots
        uses: actions/download-artifact@v2
        if: failure()
        with:
          name: ${{ github.run_id }}
          path: |
            /home/runner/work/matomo/matomo/tests/UI/screenshot-diffs
            /home/runner/work/matomo/matomo/tests/UI/processed-ui-screenshots
            /home/runner/work/matomo/matomo/tests/UI/expected-screenshots

#      - name: upload processed screenshots
#        if: failure()
#        shell: bash
#        env:
#          ARTIFACTS_PASS: ${{ secrets.ARTIFACTS_PASS }}
#        run: |
#          url_base="https://builds-artifacts.matomo.org/build?auth_key=$ARTIFACTS_PASS&repo=${{ github.repository }}&build_id=${{ github.run_id }}&build_entity_id=${{ github.run_number }}&branch=${{ github.event.pull_request.base.ref }}"
#          echo "::debug:: Uploading artifacts for UITests..."
#          cd ./tests/UI
#          tar -cvjSf processed-ui-screenshots.tar.bz2 processed-ui-screenshots
#          curl -X POST --data-binary processed-ui-screenshots.tar.bz2 "$url_base&artifact_name=processed-screenshots"
#          tar -cvjSf screenshot-diffs.tar.bz2 screenshot-diffs
#          curl -X POST --data-binary @screenshot-diffs.tar.bz2 "$url_base&artifact_name=screenshot-diffs"




